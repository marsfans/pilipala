name: Build Nginx Multi-Platform (Manual Version)

on:
  workflow_dispatch:
    inputs:
      nginx_version:
        description: "Nginx 版本号（例如 1.26.2）"
        required: true
        default: "1.26.2"

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu
            runner: ubuntu-latest
            arch: amd64
          - os: ubuntu
            runner: ubuntu-latest
            arch: arm64
          - os: macos
            runner: macos-latest
            arch: amd64
          - os: windows
            runner: windows-latest
            arch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Linux / macOS 编译
      - name: Install dependencies (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential libpcre3-dev zlib1g-dev libssl-dev wget
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew install pcre openssl zlib wget
          fi

      - name: Build Nginx (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "🔹 编译 Nginx 版本: ${{ github.event.inputs.nginx_version }}"
          wget http://nginx.org/download/nginx-${{ github.event.inputs.nginx_version }}.tar.gz
          tar zxvf nginx-${{ github.event.inputs.nginx_version }}.tar.gz
          cd nginx-${{ github.event.inputs.nginx_version }}
          ./configure \
            --prefix=/opt/nginx \
            --with-http_ssl_module \
            --with-http_v2_module \
            --with-http_gzip_static_module \
            --with-stream
          make -j$(nproc || sysctl -n hw.ncpu)
          make install
          cd /opt
          tar czf nginx-${{ matrix.os }}-${{ matrix.arch }}-${{ github.event.inputs.nginx_version }}.tar.gz nginx

      # Windows (MinGW)
      - name: Setup MinGW and MSYS2
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
            mingw-w64-x86_64-pcre
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-openssl
            wget
            tar

      - name: Build Nginx (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          echo "🔹 编译 Nginx 版本: ${{ github.event.inputs.nginx_version }}"
          wget http://nginx.org/download/nginx-${{ github.event.inputs.nginx_version }}.tar.gz
          tar zxvf nginx-${{ github.event.inputs.nginx_version }}.tar.gz
          cd nginx-${{ github.event.inputs.nginx_version }}
          ./configure \
            --prefix=/c/nginx \
            --with-http_ssl_module \
            --with-http_v2_module \
            --with-http_gzip_static_module \
            --with-stream
          make -j$(nproc)
          make install
          cd /c
          tar czf nginx-windows-${{ matrix.arch }}-${{ github.event.inputs.nginx_version }}.tar.gz nginx

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nginx-${{ matrix.os }}-${{ matrix.arch }}-${{ github.event.inputs.nginx_version }}
          path: |
            nginx-${{ matrix.os }}-${{ matrix.arch }}-${{ github.event.inputs.nginx_version }}.tar.gz

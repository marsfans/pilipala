# This is a basic workflow to help you get started with Actions

name: build bili_you ios

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  FLUTTER_VERSION: "3.16.0"
  CORE_VERSION: "1.18.1"
  VERSION: "1.2.7"
  NAME: "bili_you"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-IOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      - name: Create Folder for certificates and profiles
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/MobileDevice/Certificates/
       
       # decode and save the p12 and provisioning files stored as secrets
      - name: Get Certificate
        id: certFileDecode
        uses: timheuer/base64-to-file@v1.0.3
        with:
         fileName: 'certificate.p12'
         encodedString: ${{ secrets.P12_BASE64 }}
      - name: Copy Certificate
        run: mv ${{ steps.certFileDecode.outputs.filePath }} ~/Library/MobileDevice/Certificates/certificate.p12
       
      - name: Get Profile
        id: profFileDecode
        uses: timheuer/base64-to-file@v1.0.3
        with:
         fileName: 'decoded.mobileprovision'
         encodedString: ${{ secrets.MOBILEPROVISION_BASE64 }}
      - name: Copy Profiles
        run: mv ${{ steps.profFileDecode.outputs.filePath }} ~/Library/MobileDevice/Provisioning\ Profiles/decoded.mobileprovision
      - name: Install python and codemagic tools
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: clone 
        run: git clone https://github.com/lucinhu/bili_you
      - name: Install python dependencies
        run:  python -m pip install codemagic-cli-tools
      - name: Initialize Keychain with certificate
        run: |
          cd ${{ env.NAME }}
          keychain initialize
          keychain add-certificates --certificate ~/Library/MobileDevice/Certificates/certificate.p12 --certificate-password ${{ secrets.cert_password }} 
      - name: Build
        # env:
        #   VERSION: ${{ needs.get-release.outputs.tag_name }}
        run: |
          cd ${{ env.NAME }}
          flutter pub get
          # dart run build_runner build --delete-conflicting-outputs
          #flutter build ipa --release --export-options-plist=ios/Runner/
          xcode-project use-profiles
          flutter build ios --release --no-codesign
          # xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner --config Release
          # cd build/ios/ipa
          mkdir Payload && cp -r ./build/ios/iphoneos/Runner.app ./Payload && zip -r -o app-release.ipa ./Payload
          mv app-release.ipa ${{ env.NAME }}-${{ env.VERSION }}-ios.ipa
          # flutter build ios --release
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          # Artifact name
          name: ${{ env.NAME }}-${{ env.VERSION }}-ios
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ env.NAME }}/*.ipa

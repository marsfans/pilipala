# This is a basic workflow to help you get started with Actions

name: build AllLive

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
    
      
    - name: git clone 
      run: git clone https://github.com/xiaoyaocz/AllLive
    # - name: Install certutil/makecert
    #   run: |
    #     cd AllLive
    #     curl -L -o makecert.exe https://github.com/FiloSottile/mkcert/releases/download/v1.4.4/mkcert-v1.4.4-windows-amd64.exe
    #     go install github.com/jsws/certutil@latest
    - name: CA
      run: |
        cd AllLive
        ./makecert.exe -r -pe -n "CN=fans" -b 01/01/2022 -e 01/01/2025 -eku 1.3.6.1.5.5.7.3.3 -ss MY -len 2048 -sp "Microsoft Enhanced RSA and AES Cryptographic Provider" -sy 24 AllLive.cer
        C:\Windows\System32\certutil.exe -user -exportpfx MY "AllLive" AllLive.pfx
    
      
    - name: Restore NuGet packages
      run: |
        cd AllLive
        nuget restore AllLive.sln
    - name: Build UWP Appx
      run: |
        cd AllLive
        msbuild /p:Configuration=Release /p:Platform=x86 /m /nologo /p:AppxBundlePlatforms="x86|x64|ARM" /p:AppxBundle=Always /p:OutputPath=./release /p:AppxPackageSigningEnabled=true /p:AppxPackageCertificateThumbprint="AllLive.pfx" AllLive.sln
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        # Artifact name
        name: AllLive
        # A file, directory or wildcard pattern that describes what to upload
        path: AllLive/release/*.appx

          
      

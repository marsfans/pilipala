name: Build & Release Caddy Multi-Platform

on:
  workflow_dispatch:
    inputs:
      caddy_version:
        description: '指定 Caddy 版本号（如 v2.8.4 或 latest）'
        required: true
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装 Go 1.25.x
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'

      - name: 安装 xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: 编译 Caddy
        run: |
          mkdir -p build
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          export VERSION=${{ github.event.inputs.caddy_version }}
          echo "开始编译: ${GOOS}-${GOARCH} (${VERSION})"

          # 设置输出文件名
          if [[ "$GOOS" == "windows" ]]; then
            OUTFILE="build/caddy.exe"
          else
            OUTFILE="build/caddy"
          fi

          # 构建
          xcaddy build ${VERSION} \
            --with github.com/caddyserver/forwardproxy@caddy2=github.com/klzgrad/forwardproxy@naive \
            --with github.com/caddy-dns/cloudflare \
            --with github.com/caddy-dns/alidns \
            --output ${OUTFILE}

          # 打包并保持系统架构信息在压缩包名中
          cd build
          if [[ "$GOOS" == "windows" ]]; then
            zip caddy-${GOOS}-${GOARCH}-${VERSION}.zip caddy.exe
          else
            tar -czf caddy-${GOOS}-${GOARCH}-${VERSION}.tar.gz caddy
          fi
          cd ..

      - name: 上传产物到 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: caddy-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.event.inputs.caddy_version }}
          path: build/caddy-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.event.inputs.caddy_version }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 下载所有产物
        uses: actions/download-artifact@v4
        with:
          path: release-files

      - name: 创建 Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.caddy_version }}
          name: "Caddy ${{ github.event.inputs.caddy_version }}"
          files: release-files/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
